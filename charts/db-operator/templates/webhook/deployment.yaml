{{- if .Values.webhook.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webhook.name" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
    app.kubernetes.io/component: "webhook"
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "webhook"
  template:
    metadata:
      labels:
        {{- include "labels" . | nindent 8 }}
        app.kubernetes.io/component: "webhook"
        {{- if .Values.webhook.podLabels }}
        {{ toYaml .Values.webhook.podLabels | trim | nindent 8 }}
        {{- end }}
      {{- if .Values.annotations }}
      annotations:
        {{ toYaml .Values.annotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.webhook.serviceAccount.create }}
      serviceAccountName: {{ template "webhook.serviceAccountName" . }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: webhook
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ template "github_packages_image_version" . }}"
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          command:
          - db-operator
          args: ["--webhook"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.image.logLevel }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{ toYaml .Values.affinity  | nindent 8 }}
      tolerations:
        {{ toYaml .Values.tolerations | nindent 8 }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | nindent 8 }}
    {{- end }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ .Values.webhook.certificate.secretName }}
{{- end }}
