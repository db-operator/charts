{{- if .Values.crds.install }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
    {{- if .Values.webhook.certificate.create }}
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ .Values.webhook.certificate.name}}
    {{ else }}
    cert-manager.io/inject-ca-from-secret: {{ .Release.Namespace }}/{{ .Values.webhook.certificate.secretName}}
    {{- end }}
    {{- if .Values.crds.keep }}
    helm.sh/resource-policy: keep
    {{- end }}
    {{- with .Values.crds.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: dbusers.kinda.rocks
spec:
  group: kinda.rocks
  names:
    kind: DbUser
    listKind: DbUserList
    plural: dbusers
    singular: dbuser
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: DbUser is the Schema for the dbusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DbUserSpec defines the desired state of DbUser
            properties:
              accessType:
                description: AccessType that should be given to a user Currently only
                  readOnly and readWrite are supported by the operator
                type: string
              databaseRef:
                description: DatabaseRef should contain a name of a Database to create
                  a user there Database should be in the same namespace with the user
                type: string
              secretName:
                description: SecretName name that should be used to save user's credentials
                type: string
              username:
                description: Username to use for creating a user
                type: string
            required:
            - accessType
            - databaseRef
            - secretName
            - username
            type: object
          status:
            description: DbUserStatus defines the observed state of DbUser
            properties:
              database:
                type: string
              phase:
                type: string
              status:
                type: boolean
              user:
                type: string
            required:
            - database
            - phase
            - status
            - user
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}
