{{- if has "mysql" .Values.tests.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name:  {{ template "db-operator.name" . }}-mysql-admin-password
  labels:
    {{- include "labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    {{- if .Values.tests.cleanup }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- end }}
    "helm.sh/hook-weight": "1"
type: Opaque
data:
  password: {{ .Values.tests.mysql.admin.password | b64enc }}
  user: {{ .Values.tests.mysql.admin.user | b64enc }}

---
apiVersion: kinda.rocks/v1beta1
kind: DbInstance
metadata:
  name:  {{ template "db-operator.name" . }}-mysql
  labels:
    {{- include "labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    {{- if .Values.tests.cleanup }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- end }}
    "helm.sh/hook-weight": "1"
spec:
  adminSecretRef:
    Namespace: {{ .Release.Namespace }}
    Name:  {{ template "db-operator.name" . }}-mysql-admin-password
  engine: mysql
  generic:
    host: {{ .Values.tests.mysql.service.name }}.{{ .Values.tests.mysql.service.namespace }}.svc.cluster.local
    port: 3306
    publicIp: "1.2.3.4"
    backupHost: {{ .Values.tests.mysql.service.name }}.{{ .Values.tests.mysql.service.namespace }}.svc.cluster.local

---
apiVersion: "kinda.rocks/v1beta1"
kind: "Database"
metadata:
  name: {{ template "db-operator.name" . }}-mysql
  labels:
    {{- include "labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    {{- if .Values.tests.cleanup }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- end }}
    "helm.sh/hook-weight": "2"
spec:
  secretName: {{ template "db-operator.name" . }}-mysql-credentials # where to save db name user, password for application
  instance: {{ template "db-operator.name" . }}-mysql
  backup:
    enable: false
    cron: ""
  deletionProtected: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "db-operator.name" . }}-mysql-test-script
  labels:
    {{- include "labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    {{- if .Values.tests.cleanup }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- end }}
    "helm.sh/hook-weight": "3"
data:
  write.sh: |
{{ .Files.Get "scripts/mysql/test_write.sh" | indent 4}}
  read.sh: |
{{ .Files.Get "scripts/mysql/test_read.sh" | indent 4}}

---
apiVersion: v1
kind: Pod
metadata:
  name: {{ template "db-operator.name" . }}-tester-app-{{ randAlphaNum 5 | lower }}
  labels:
    {{- include "labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    {{- if .Values.tests.cleanup }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- end }}
    "helm.sh/hook-weight": "4"
spec:
  containers:
  - name: mysql-writer
    image: bitnami/mysql
    command:
      - sh
      - -c
      - exec sh /app/write.sh
    env:
      - name: MYSQL_PASSWORD_FILE
        value: /run/secrets/mysql/PASSWORD
      - name: MYSQL_USERNAME
        valueFrom:
          secretKeyRef:
            name: {{ template "db-operator.name" . }}-mysql-credentials
            key: USER
      - name: MYSQL_DB
        valueFrom:
          secretKeyRef:
            name: {{ template "db-operator.name" . }}-mysql-credentials
            key: DB
      - name: MYSQL_HOST
        valueFrom:
          configMapKeyRef:
            name: {{ template "db-operator.name" . }}-mysql-credentials
            key: DB_CONN
    volumeMounts:
      - name: db-secret
        mountPath: /run/secrets/mysql/
        readOnly: true
      - name: script
        mountPath: /app/
      - name: shared-data
        mountPath: /tmp
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
  - name: mysql-reader
    image: bitnami/mysql
    command:
      - sh
      - -c
      - exec sh /app/read.sh
    env:
      - name: MYSQL_PASSWORD_FILE
        value: /run/secrets/mysql/PASSWORD
      - name: MYSQL_USERNAME
        valueFrom:
          secretKeyRef:
            name: {{ template "db-operator.name" . }}-mysql-credentials
            key: USER
      - name: MYSQL_DB
        valueFrom:
          secretKeyRef:
            name: {{ template "db-operator.name" . }}-mysql-credentials
            key: DB
      - name: MYSQL_HOST
        valueFrom:
          configMapKeyRef:
            name: {{ template "db-operator.name" . }}-mysql-credentials
            key: DB_CONN
    volumeMounts:
      - name: db-secret
        mountPath: /run/secrets/mysql/
        readOnly: true
      - name: script
        mountPath: /app/
      - name: shared-data
        mountPath: /tmp
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
  volumes:
    - name: db-secret
      secret:
        secretName: {{ template "db-operator.name" . }}-mysql-credentials
    - name: script
      configMap:
        name: {{ template "db-operator.name" . }}-mysql-test-script
    - name: shared-data
      emptyDir: {}
{{- end }}
