#!/bin/bash

ATTEMPTS_AMOUNT="${TEST_ATTEMPTS_AMOUNT:-10}"
ATTEMPTS_TIMEOUT="${TEST_ATTEMPTS_TIMEOUT:-30}"
DB_INSTANCE_NAME="${TEST_DB_INSTANCE_NAME}"
CLOUD_PROXY_DEPLOYMENT="dbinstance-${TEST_CLOUD_PROXY_DEPLOYMENT:-${DB_INSTANCE_NAME}-gsql-instance-cloudproxy}"
EXPECTED_STATUS=true
TEST_PASSED=false

for _ in $(seq 1 "$ATTEMPTS_AMOUNT"); do
  echo "[INFO]: Sleeping ${ATTEMPTS_TIMEOUT} seconds"
  sleep "$ATTEMPTS_TIMEOUT"
  ACTUAL_STATUS=$(kubectl get dbinstance "${DB_INSTANCE_NAME}" -o yaml | yq '.status.status')

  if [ "${ACTUAL_STATUS}" == "${EXPECTED_STATUS}" ]; then
    echo "[INFO]: Test is passed, dbinstance is ready"
    TEST_PASSED=true;
    break
  fi

done

if [ "${TEST_PASSED}" != "true" ]; then
  echo "[ERROR]: Test is failed, check the kubectl get dbinstance output"
  kubectl get dbinstance "${DB_INSTANCE_NAME}" -o yaml | yq
  exit 1;
fi

for _ in $(seq 1 "$ATTEMPTS_AMOUNT"); do
  echo "[INFO]: Sleeping ${ATTEMPTS_TIMEOUT} seconds"
  sleep "$ATTEMPTS_TIMEOUT"
  ACTUAL_STATUS=$(kubectl get deployment "${CLOUD_PROXY_DEPLOYMENT}" -o yaml | yq '.status.availableReplicas')
  DESIRED_STATUS=$(kubectl get deployment "${CLOUD_PROXY_DEPLOYMENT}" -o yaml | yq '.status.replicas')

  if [ "${ACTUAL_STATUS}" == "${DESIRED_STATUS}" ]; then
    echo "[INFO]: Test is passed, cloud proxy is deployed"
    exit 0
  fi

done

echo "[ERROR]: Test is failed, check the kubectl get dbinstance output"
kubectl get dbinstance "${DB_INSTANCE_NAME}" -o yaml | yq
exit 1;
